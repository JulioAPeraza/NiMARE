"""

.. _cbma_workflow:

====================================================
Run a coordinate-based meta-analysis (CBMA) workflow
====================================================

NiMARE provides a plethora of tools for performing meta-analyses on neuroimaging data.
Sometimes it's difficult to know where to start, especially if you're new to meta-analysis.
This tutorial will walk you through using a CBMA workflow function which puts together
the fundamental steps of a CBMA meta-analysis.
"""
import os
from pprint import pprint

import matplotlib.pyplot as plt
from nilearn.plotting import plot_stat_map

from nimare.dataset import Dataset
from nimare.utils import get_resource_path
from nimare.workflows import cbma_workflow

###############################################################################
# Load Dataset
# -----------------------------------------------------------------------------

dset_file = os.path.join(get_resource_path(), "nidm_pain_dset.json")
dset = Dataset(dset_file)

###############################################################################
# Run CBMA Workflow
# -----------------------------------------------------------------------------
# The CBMA workflow function runs the following steps:
#
# 1. Runs a meta-analysis using the specified method (default: ALE)
# 2. Applies a corrector to the meta-analysis results (default: FWECorrector)
# 3. Generates cluster tables and runs diagnostics on the corrected results (default: Jackknife)
#
# All in one function call!

result = cbma_workflow(dset)

###############################################################################
# Plot Results
# -----------------------------------------------------------------------------
# The CBMA workflow function returns a :class:`~nimare.results.MetaResult` object,
# where you can access the corrected results of the meta-analysis and diagnostics tables.
#
# Corrected map:
img = result.get_map("z_corr-FWE_method-bonferroni")
plot_stat_map(
    img,
    cut_coords=4,
    display_mode="z",
    threshold=2.326,  # cluster-level p < .01, one-tailed
    cmap="RdBu_r",
    vmax=4,
)
plt.show()

###############################################################################
# Clusters table
# ``````````````````````````````````````````````````````````````````````````````
result.tables["z_corr-FWE_method-bonferroni_clust"]

###############################################################################
# Contribution table
# ``````````````````````````````````````````````````````````````````````````````
result.tables["z_corr-FWE_method-bonferroni_Jackknife"]

###############################################################################
# Methods
# -----------------------------------------------------------------------------
# The MetaResult object also provides boilerplate text automatically generated by NiMARE,
# which is released under the `CC0 <https://creativecommons.org/publicdomain/zero/1.0/>`_ license.
print("Description:")
pprint(result.description_)

###############################################################################
# References
# ``````````````````````````````````````````````````````````````````````````````
print("References:")
pprint(result.bibtex_)
